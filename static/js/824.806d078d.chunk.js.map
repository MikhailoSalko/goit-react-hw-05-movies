{"version":3,"file":"static/js/824.806d078d.chunk.js","mappings":"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","sources":["api/fetchFunctions.js","components/FilmList/FilmList.jsx","components/SearchForm/SearchForm.styled.js","js/Notiflix.init.js","components/SearchForm/SearchForm.jsx","pages/MoviesPage/MoviesPage.jsx","styles/pageStyles.styled.js"],"sourcesContent":["const URLS = {\n  TREND_FILMS: 'https://api.themoviedb.org/3/trending/movie/week',\n  FILM_BY_SEARCH: 'https://api.themoviedb.org/3/search/movie',\n  FILM_BY_ID: 'https://api.themoviedb.org/3/movie/',\n};\n\nconst OPTIONS = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NjAwOTdiYTdkMGEwMjdhMWIwZmQ1MzE4ZDEwOWQyNiIsInN1YiI6IjY0NzMyNjgzOWFlNjEzMDBlNTk0ODMwMSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ZZFB21DrPYslGFOp2UJX2KSQ02EhM3eeP3-goKJHXAk',\n  },\n};\n\nexport const fetchTrendFims = () => {\n  return fetch(`${URLS.TREND_FILMS}`, OPTIONS).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    //     console.log(response);\n    return response.json();\n  });\n};\n\nexport const fetchFilmsBySearchQuery = search => {\n  return fetch(`${URLS.FILM_BY_SEARCH}?query=${search}`, OPTIONS).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      //     console.log(response);\n      return response.json();\n    }\n  );\n};\n\nexport const fetchFilmById = id => {\n  return fetch(`${URLS.FILM_BY_ID}${id}`, OPTIONS).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    // console.log(response);\n    return response.json();\n  });\n};\n\nexport const fetchCastByFilmId = id => {\n  return fetch(`${URLS.FILM_BY_ID}${id}/credits`, OPTIONS).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    // console.log(response);\n    return response.json();\n  });\n};\n\nexport const fetchReviewsByFilmId = id => {\n  return fetch(`${URLS.FILM_BY_ID}${id}/reviews`, OPTIONS).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    // console.log(response);\n    return response.json();\n  });\n};\n","import { memo } from 'react';\nimport { StyledLink } from 'styles/pageStyles.styled';\nimport PropTypes from 'prop-types';\n\nconst FilmList = ({ array, location }) => {\n  return array.map(({ id, title }) => (\n    <li key={id}>\n      <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n        {title}\n      </StyledLink>\n    </li>\n  ));\n};\n\nFilmList.defaultProps = {\n  array: [],\n};\n\nFilmList.propTypes = {\n  array: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n  location: PropTypes.object.isRequired,\n};\n\nexport default memo(FilmList);\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const StyledSearchInput = styled.input`\n  display: block;\n  width: 250px;\n  height: 30px;\n  border-radius: 5px;\n`;\n\nexport const StyledSearchButton = styled.button`\n  width: 100px;\n  height: 35px;\n  font-size: 15px;\n  border-radius: 5px;\n`;\n","import Notiflix from 'notiflix';\n\nexport const notiflixSettings = Notiflix.Report.init({\n  width: '400px',\n  titleFontSize: '16px',\n  titleMaxLength: 50,\n});\n","import {\n  StyledForm,\n  StyledSearchInput,\n  StyledSearchButton,\n} from './SearchForm.styled';\nimport PropTypes from 'prop-types';\n\nconst SearchForm = ({ onSubmit, query = '' }) => {\n  return (\n    <StyledForm onSubmit={onSubmit}>\n      <StyledSearchInput\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"Please, enter the movie name\"\n        defaultValue={query}\n      />\n      <StyledSearchButton type=\"submit\">Search</StyledSearchButton>\n    </StyledForm>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n};\n\nexport default SearchForm;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { Report } from 'notiflix';\nimport { notiflixSettings } from 'js/Notiflix.init';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport FilmList from 'components/FilmList/FilmList';\nimport { LoaderTailSpin } from 'components/Loader/Loader';\nimport { fetchFilmsBySearchQuery } from 'api/fetchFunctions';\nimport {\n  StyledFilmList,\n  // StyledLoadMoreBtn,\n} from '../../styles/pageStyles.styled';\n\nconst MoviesPage = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query') ?? '';\n  // const page = searchParams.get('page') ?? 1;\n\n  useEffect(() => {\n    const getFimsByQuery = () =>\n      fetchFilmsBySearchQuery(query).then(({ results }) => {\n        if (results.length === 0) {\n          return Report.info(\n            'There are no films per your request',\n            notiflixSettings\n          );\n        }\n        setFilms([...results]);\n      });\n    if (query) {\n      setLoading(true);\n      getFimsByQuery()\n        .catch(error => setError(error.message))\n        .finally(() => setLoading(false));\n    }\n  }, [query]);\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    const query = e.target.search.value;\n    if (query === '') {\n      return Report.info('Please, enter the name of film', notiflixSettings);\n    }\n    setSearchParams({ query });\n  };\n\n  // const handleLoadMoreBtn = () => {\n  //   setSearchParams({ query, page: Number(page) + 1 });\n  // };\n\n  return (\n    <>\n      {error &&\n        Report.failure(\n          'Something went wrong, please try again later',\n          notiflixSettings\n        )}\n      <SearchForm onSubmit={handleSubmitForm} query={query} />\n      {loading ? (\n        <LoaderTailSpin />\n      ) : (\n        <StyledFilmList>\n          <FilmList array={films} location={location} />\n        </StyledFilmList>\n      )}\n      {/* {query && (\n        <StyledLoadMoreBtn onClick={handleLoadMoreBtn}>\n          Load more\n        </StyledLoadMoreBtn>\n      )} */}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import styled from 'styled-components';\nimport { StyledSearchButton } from 'components/SearchForm/SearchForm.styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledHomeHeading = styled.h1`\n  font-size: 50px;\n  margin-bottom: 20px;\n  color: #32363d;\n`;\n\nexport const StyledFilmList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const StyledListMoviesDetails = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 20px;\n  text-decoration: none;\n  color: #1261e0;\n  transition: color 250ms ease;\n\n  &:hover,\n  &:focus-visible {\n    color: #eb1b0c;\n    text-decoration: underline;\n  }\n`;\n\nexport const StyledBackButton = styled(StyledSearchButton)`\n  margin-left: 10px;\n`;\n\nexport const StyledBackHomePageBtn = styled(StyledSearchButton)`\n  width: 150px;\n`;\n\nexport const StyledLoadMoreBtn = styled(StyledSearchButton)`\n  margin-top: 10px;\n`;\n"],"names":["URLS","OPTIONS","headers","accept","Authorization","fetchTrendFims","fetch","then","response","ok","Error","status","json","fetchFilmsBySearchQuery","search","fetchFilmById","id","fetchCastByFilmId","fetchReviewsByFilmId","FilmList","array","location","map","title","to","state","from","defaultProps","memo","StyledForm","styled","StyledSearchInput","StyledSearchButton","notiflixSettings","Notiflix","width","titleFontSize","titleMaxLength","onSubmit","query","type","name","placeholder","defaultValue","useState","loading","setLoading","error","setError","films","setFilms","useSearchParams","searchParams","setSearchParams","useLocation","get","useEffect","results","length","Report","catch","message","finally","e","preventDefault","target","value","Loader","StyledHomeHeading","StyledFilmList","StyledListMoviesDetails","StyledLink","Link","StyledBackButton","StyledBackHomePageBtn"],"sourceRoot":""}